# khai báo thư viện
import os
import time
import calendar
from datetime import datetime
from tkinter import *
from tkinter import Tk, ttk, LEFT, W, E, N, S, messagebox, filedialog, colorchooser
import cv2
from PIL import Image, ImageTk
import smtplib

# Tính năng 1: Đồng hồ và lịch
def clock():
    # Tạo cửa sổ chính
    root = Toplevel()
    root.title("1. Đồng hồ và lịch")
    tinh_nang_1 = ttk.Frame(root, padding=20)
    tinh_nang_1.grid()
    # Tạo các nhãn cho ngày, giờ và lịch
    hom_nay = ttk.Label(tinh_nang_1, text="", anchor="center", font=("Helvetica", 16))
    hom_nay.grid(column=0, row=0, columnspan=2, pady=5)
    thoi_gian = ttk.Label(tinh_nang_1, text="", anchor="center", font=("Helvetica", 24, "bold"))
    thoi_gian.grid(column=0, row=1, columnspan=2, pady=5)
    calendar_label = ttk.Label(tinh_nang_1, text="", anchor="center", justify=LEFT, font=("Courier New", 12))
    calendar_label.grid(column=0, row=2, columnspan=2, pady=5)
    def update_clock():
        # Lấy ngày và giờ hiện tại
        hom_nay_data = datetime.now().strftime("%d-%m-%Y")
        thoi_gian_data = datetime.now().strftime("%H:%M:%S")
        # Cập nhật các nhãn
        hom_nay.config(text=f"Ngày hôm nay: {hom_nay_data}")
        thoi_gian.config(text=f"Thời gian: {thoi_gian_data}")
        root.after(1000, update_clock)
    # Lấy lịch cả năm
    text_calendar = calendar.TextCalendar()
    year = datetime.now().year
    all_lich = text_calendar.formatyear(year)
    calendar_label.config(text=f"Lịch năm nay: {all_lich}")
    # Gọi hàm update_clock ban đầu để hiển thị đồng hồ ngay lập tức
    update_clock()
    root.mainloop()
# Tính năng 2: Máy ảnh
recording = False
video_writer = None
def camera():
    global recording, video_writer
    root = Toplevel()
    root.title("2. Máy ảnh")
    cap = cv2.VideoCapture(0)

    tinh_nang_2 = ttk.Frame(root, padding=20)
    tinh_nang_2.grid()
    label = Label(tinh_nang_2)
    label.grid(column=0, row=0, columnspan=2, sticky="ew")

    def update_frame():
        ret, frame = cap.read()
        if ret:
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
            img = Image.fromarray(frame)
            img_tk = ImageTk.PhotoImage(image=img)
            label.img_tk = img_tk
            label.config(image=img_tk)
            if recording and video_writer is not None:
                frame_bgr = cv2.cvtColor(frame, cv2.COLOR_RGB2BGR)
                video_writer.write(frame_bgr)
        root.after(10, update_frame)

    def on_closing():
        cap.release()
        if video_writer is not None:
            video_writer.release()
        root.destroy()

    def chup_anh():
        ret, frame = cap.read()
        if ret:
            filename = datetime.now().strftime("%Y%m%d_%H%M%S") + ".jpg"
            cv2.imwrite(filename, frame)
            print(f"Ảnh đã được lưu: {filename}")

    def quay_video():
        global recording, video_writer
        if not recording:
            recording = True
            filename = datetime.now().strftime("%Y%m%d_%H%M%S") + ".avi"
            fourcc = cv2.VideoWriter_fourcc(*'XVID')
            video_writer = cv2.VideoWriter(filename, fourcc, 20.0, (640, 480))
            print(f"Bắt đầu quay video: {filename}")
        else:
            recording = False
            if video_writer is not None:
                video_writer.release()
                print("Dừng quay video")
            video_writer = None

    def mo_kho_luu_tru():
        os.startfile(os.getcwd())

    ttk.Button(tinh_nang_2, text="Chụp ảnh", command=chup_anh).grid(column=0, row=1, columnspan=2, sticky="ew")
    ttk.Button(tinh_nang_2, text="Quay video", command=quay_video).grid(column=0, row=2, columnspan=2, sticky="ew")
    ttk.Button(tinh_nang_2, text="Kho lưu trữ", command=mo_kho_luu_tru).grid(column=0, row=3, columnspan=2, sticky="ew")

    root.protocol("WM_DELETE_WINDOW", on_closing)
    update_frame()
    root.mainloop()
# Tính năng 3: Gửi thư  
SENDER_EMAIL = "ungdungthu3@gmail.com"
SENDER_PASSWORD = "dvmq ponq gplj awdq"
def gui_thu():
    def send_email():
        try:
            server = smtplib.SMTP("smtp.gmail.com", 587)
            server.starttls()
            server.login(SENDER_EMAIL, SENDER_PASSWORD)
            email_message = f"Subject: {subject_entry.get()}\n\n{message_text.get('1.0', END)}".encode("utf-8")
            server.sendmail(SENDER_EMAIL, recipient_entry.get(), email_message)
            server.quit()
            messagebox.showinfo("Thành công", "Email đã được gửi!")
        except Exception as e:
            messagebox.showerror("Lỗi", f"Không thể gửi email: {e}")

    root = Toplevel()
    root.title("3.Gửi thư")

    Label(root, text="Người gửi:").grid(row=0, column=0)
    Label(root, text=SENDER_EMAIL).grid(row=0, column=1)

    Label(root, text="Người nhận:").grid(row=1, column=0)
    recipient_entry = Entry(root, width=40); recipient_entry.grid(row=1, column=1)

    Label(root, text="Chủ đề:").grid(row=2, column=0)
    subject_entry = Entry(root, width=40); subject_entry.grid(row=2, column=1)

    Label(root, text="Nội dung:").grid(row=3, column=0)
    message_text = Text(root, height=10, width=50); message_text.grid(row=3, column=1)

    Button(root, text="Gửi", command=send_email).grid(row=4, column=1)
    
    root.mainloop()
# Tính năng 4: Máy tính
def may_tinh():
    root = Toplevel()
    root.title("4.Máy tính")
    tinh_nang_4 = ttk.Frame(root, padding=10)
    tinh_nang_4.grid()

    entry = Entry(root, width=20); entry.pack()

    ttk.Button(tinh_nang_4, text="%", command=lambda: entry.insert(END, "1") ).grid(column=1, row=1, columnspan=2)
    ttk.Button(tinh_nang_4, text="+", command=lambda: entry.insert(END, "1")).grid(column=1, row=4, columnspan=2)
    ttk.Button(tinh_nang_4, text="-", command=lambda: entry.insert(END, "1")).grid(column=2, row=4, columnspan=2)
    ttk.Button(tinh_nang_4, text="x", command=lambda: entry.insert(END, "1")).grid(column=3, row=4, columnspan=2)
    ttk.Button(tinh_nang_4, text=":", command=lambda: entry.insert(END, "1")).grid(column=4, row=4, columnspan=2)
    ttk.Button(tinh_nang_4, text="0", command=lambda: entry.insert(END, "1")).grid(column=6, row=2, columnspan=2)
    ttk.Button(tinh_nang_4, text="1", command=lambda: entry.insert(END, "1")).grid(column=5, row=1, columnspan=2)
    ttk.Button(tinh_nang_4, text="2", command=lambda: entry.insert(END, "1")).grid(column=5, row=2, columnspan=2)
    ttk.Button(tinh_nang_4, text="3", command=lambda: entry.insert(END, "1")).grid(column=5, row=3, columnspan=2)
    ttk.Button(tinh_nang_4, text="4", command=lambda: entry.insert(END, "1")).grid(column=4, row=1, columnspan=2)
    ttk.Button(tinh_nang_4, text="5", command=lambda: entry.insert(END, "1")).grid(column=4, row=2, columnspan=2)
    ttk.Button(tinh_nang_4, text="6", command=lambda: entry.insert(END, "1")).grid(column=4, row=3, columnspan=2)
    ttk.Button(tinh_nang_4, text="7", command=lambda: entry.insert(END, "1")).grid(column=3, row=1, columnspan=2)
    ttk.Button(tinh_nang_4, text="8", command=lambda: entry.insert(END, "1")).grid(column=3, row=2, columnspan=2)
    ttk.Button(tinh_nang_4, text="9", command=lambda: entry.insert(END, "1")).grid(column=3, row=3, columnspan=2)
    ttk.Button(tinh_nang_4, text="=", command=lambda: entry.insert(END, "1")).grid(column=5, row=4, columnspan=2)
    ttk.Button(tinh_nang_4, text="(", command=lambda: entry.insert(END, "1")).grid(column=1, row=2, columnspan=2)
    ttk.Button(tinh_nang_4, text=")", command=lambda: entry.insert(END, "1")).grid(column=1, row=3, columnspan=2)
    ttk.Button(tinh_nang_4, text="^", command=lambda: entry.insert(END, "1")).grid(column=2, row=2, columnspan=2)
    ttk.Button(tinh_nang_4, text=",", command=lambda: entry.insert(END, "1")).grid(column=6, row=3, columnspan=2)
    ttk.Button(tinh_nang_4, text="xóa", command=lambda: entry.insert(END, "1")).grid(column=2, row=3, columnspan=2)
    ttk.Button(tinh_nang_4, text="=", command=lambda: entry.insert(END, "1")).grid(column=5, row=4, columnspan=2)
    ttk.Button(tinh_nang_4, text="**(căn)", command=lambda: entry.insert(END, "1")).grid(column=2, row=1, columnspan=2)
    root.mainloop()


# Tính năng 5: Bàn phím ảo
def Ban_phim_ao():
    messagebox.showinfo("Thông báo", "Tính năng này chưa được triển khai.")
# Tính năng 6: Game mini
def mini_game():
    messagebox.showinfo("Thông báo", "Tính năng này chưa được triển khai.")
# Tính năng 7: Đồng hồ đếm ngược
def dem_nguoc():
    def start_countdown():
        try:
            seconds = int(entry.get())
            if seconds < 0:
                raise ValueError("Thời gian không thể âm.")
            countdown(seconds)
        except ValueError as e:
            messagebox.showerror("Lỗi", f"Vui lòng nhập một số hợp lệ: {e}")

    def countdown(seconds):
        if seconds >= 0:
            label.config(text=f"Đếm ngược: {seconds} giây")
            root.after(1000, countdown, seconds - 1)
        else:
            label.config(text="Hết giờ!")

    root = Toplevel()
    root.title("7. Đồng hồ đếm ngược")
    ttk.Label(root, text="Nhập thời gian (giây):").grid(column=0, row=0)
    entry = ttk.Entry(root); entry.grid(column=1, row=0)
    ttk.Button(root, text="Bắt đầu", command=start_countdown).grid(column=2, row=0)
    label = ttk.Label(root, text="Đếm ngược: 0 giây", font=("Helvetica", 16))
    label.grid(column=0, row=1, columnspan=3)    
# Tính năng 8: Máy phát nhạc
def may_phat_nhac():
    messagebox.showinfo("Thông báo", "Tính năng này chưa được triển khai.")
# Tính năng 9: Viết văn bản
def van_ban():
    root = Toplevel()
    root.title("9. Viết văn bản")
    text_area = Text(root, wrap="word", font=("Arial", 12))
    text_area.pack(expand=True, fill="both")
    
    def save_file():
        file_path = filedialog.asksaveasfilename(defaultextension=".txt", filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
        if file_path:
            with open(file_path, "w", encoding="utf-8") as file:
                file.write(text_area.get("1.0", END))
            messagebox.showinfo("Thông báo", "Tệp đã được lưu thành công.")
    
    def open_file():
        file_path = filedialog.askopenfilename(filetypes=[("Text files", "*.txt"), ("All files", "*.*")])
        if file_path:
            with open(file_path, "r", encoding="utf-8") as file:
                text_area.delete("1.0", END)
                text_area.insert("1.0", file.read())
    
    ttk.Button(root, text="Lưu tệp", command=save_file).pack(side=LEFT, padx=5, pady=5)
    ttk.Button(root, text="Mở tệp", command=open_file).pack(side=LEFT, padx=5, pady=5)
    root.mainloop()
# Tính năng 10: Thay đổi giao diện người dùng
def giao_dien():
    root= None
    def ap_dung_chu_de(background_color, foreground_color):
        global root
        if root:
            root.configure(bg=background_color)
            style = ttk.Style()
            style.configure(".", background=background_color, foreground=foreground_color, font=('Arial', 10), relief="raised", padding=8, borderwidth=2)
    def chon_mau():
        color_code = colorchooser.askcolor(title="Chọn màu nền tùy chỉnh")
        if color_code[1]:
            ap_dung_chu_de(color_code[1], "black")  # Mặc định chữ đen


    root = Toplevel()
    root.title("10. Thay đổi giao diện người dùngdùng")
    tinh_nang_10 = ttk.Frame(root, padding=15)
    tinh_nang_10.grid()
    ttk.Label(tinh_nang_10, text="Chọn Màu Giao diện:", font=('Arial', 14, 'bold')).grid(row=0, column=0, pady=10)
    ttk.Button(tinh_nang_10, text="Màu Tùy Chỉnh", command=chon_mau).grid(row=1, column=0, sticky="ew", pady=5)
    root.mainloop()
# Tính năng 11: Bảng tuần hoàn hóa học
def bang_tuan_hoan():
    root = Toplevel()
    root.title("11. Bảng tuần hoàn hóa học")
    # Tạo khung giao diện
    tinh_nang_11 = ttk.Frame(root, padding=10)
    tinh_nang_11.grid()
    try:
        image = Image.open(r"D:\file cũ\data\bang_tuan_hoan.jpg")  # Đường dẫn tuyệt đối
        image = image.resize((800, 442))  # Không cần ANTIALIAS với phiên bản Pillow mới
        photo = ImageTk.PhotoImage(image)
    except Exception as e:
        print("Lỗi khi mở hình ảnh:", e)
        return

    # Tạo nhãn và hiển thị hình ảnh
    label = ttk.Label(tinh_nang_11, image=photo)
    label.image = photo  # Giữ tham chiếu để tránh ảnh biến mất
    label.grid(row=0, column=0)

    # Chạy vòng lặp chính
    root.mainloop()
# Tính năng 12: Đôi lời của nhà sản xuất
def doi_loi():
    root = Toplevel()
    root.title("11. Đôi lời của nhà sản xuất")
    message = (
        "Chào mừng bạn đến với ứng dụng của chúng tôi!\n"
        "Chúng tôi hy vọng bạn sẽ tìm thấy những tính năng hữu ích và thú vị."
        "Nếu bạn có bất kỳ câu hỏi hoặc đề xuất nào, vui lòng liên hệ với chúng tôi.\n"
        "Cảm ơn bạn đã sử dụng ứng dụng!\n"
        "Nhà sản xuất : Đinh Viết Phúc và Ngô Văn Anh Khoa."
        
    )
    ttk.Label(root, text=message, wraplength=300, justify="center").pack(padx=20, pady=20)

root = Tk() 
frm = ttk.Frame(root, padding=10)
frm.grid(row=0, column=0, sticky="nsew")

root.grid_rowconfigure(0, weight=1)    
root.grid_columnconfigure(0, weight=1) 

ttk.Label(frm, text="Menu", anchor="center", font=('Arial', 14, 'bold')).grid(column=0, row=0, columnspan=2, sticky="ew", pady=5) 
ttk.Button(frm, text="1.Đồng hồ và lịch", command=clock).grid(column=0, row=1, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="2.Máy ảnh", command=camera).grid(column=0, row=2, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="3.Gửi thư", command=gui_thu).grid(column=0, row=3, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="4.Máy tính", command=may_tinh).grid(column=0, row=4, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="5.Bàn phím ảo", command=Ban_phim_ao).grid(column=0, row=5, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="6.Game ", command=mini_game).grid(column=0, row=6, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="7. Đồng hồ đếm ngược", command=dem_nguoc).grid(column=0, row=7, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="8. Máy phát nhạc ", command=may_phat_nhac).grid(column=0, row=8, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="9. Viết văn bản ", command=van_ban).grid(column=0, row=9, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="10.Thay đổi giao diện người dùng ", command=giao_dien).grid(column=0, row=10, columnspan=2, sticky="ew", pady=2)
ttk.Button(frm, text="11. Đôi lời của nhà sản xuất ", command=doi_loi).grid(column=0, row=11, columnspan=2, sticky="ew", pady=2)

frm.grid_columnconfigure(0, weight=1) 
frm.grid_columnconfigure(1, weight=1) 

root.mainloop()
